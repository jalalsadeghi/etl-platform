# .github/workflows/deploy-staging.yml
name: Deploy Staging

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - 'docker/**'
      - 'compose/staging.yml'
      - '.github/workflows/deploy-staging.yml'

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/etl-app
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push app image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/app/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ghcr.io/${{ env.IMAGE_NAME }}:latest
          platforms: linux/amd64

      - name: Copy compose & nginx to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.STAGING_SSH_HOST }}
          username: ${{ secrets.STAGING_SSH_USER }}
          key: ${{ secrets.STAGING_SSH_KEY }}
          source: "compose/staging.yml,compose/prometheus.yml,docker/nginx/nginx.conf"
          target: ${{ secrets.STAGING_PATH || '/opt/etl-platform' }}

      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.STAGING_SSH_HOST }}
          username: ${{ secrets.STAGING_SSH_USER }}
          key: ${{ secrets.STAGING_SSH_KEY }}
          script: |
            set -e
            cd ${STAGING_PATH:-/opt/etl-platform}
            # ensure IMAGE_TAG is updated
            if grep -q '^IMAGE_TAG=' .env.staging; then
              sed -i "s/^IMAGE_TAG=.*/IMAGE_TAG=${{ github.sha }}/" .env.staging
            else
              echo "IMAGE_TAG=${{ github.sha }}" >> .env.staging
            fi
            docker compose --env-file .env.staging -f compose/staging.yml pull
            docker compose --env-file .env.staging -f compose/staging.yml up -d
            docker compose --env-file .env.staging -f compose/staging.yml down
            docker compose --env-file .env.staging -f compose/staging.yml up -d
            docker system prune -f
