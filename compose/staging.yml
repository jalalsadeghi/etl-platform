version: "3.9"

services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata_staging:/var/lib/postgresql/data
    networks: [webnet]

  redis:
    image: redis:7-alpine
    networks: [webnet]

  app:
    image: ${IMAGE_REPO}:${IMAGE_TAG}
    # during first run you can set IMAGE_TAG manually or use 'latest'
    environment:
      APP_ENV: ${APP_ENV}
      APP_HOST: ${APP_HOST}
      APP_PORT: ${APP_PORT}
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      SECRET_KEY: ${SECRET_KEY}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
      ETL_SOURCE_URL: ${ETL_SOURCE_URL}
      ETL_API_KEY: ${ETL_API_KEY}
      API_KEY: ${API_KEY}
      REDIS_URL: redis://redis:6379/0
      SERVER_NAME: ${SERVER_NAME}
    depends_on: [postgres, redis]
    networks: [webnet]

  worker:
    image: ${IMAGE_REPO}:${IMAGE_TAG}
    environment:
      APP_ENV: ${APP_ENV}
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      SECRET_KEY: ${SECRET_KEY}
      ETL_SOURCE_URL: ${ETL_SOURCE_URL}
      ETL_API_KEY: ${ETL_API_KEY}
      API_KEY: ${API_KEY}
      REDIS_URL: redis://redis:6379/0
    depends_on: [postgres, redis]
    command: ["python","-m","taskiq","worker","app.tasks.broker:broker","app.tasks.etl_tasks"]
    networks: [webnet]

  nginx:
    image: nginx:1.27-alpine
    depends_on: [app]
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - certbot-webroot:/var/www/certbot:ro
      - letsencrypt:/etc/letsencrypt:ro
    networks: [webnet]

  certbot:
    image: certbot/certbot:v2.11.0
    entrypoint: /bin/sh
    command: -c "trap exit TERM; while :; do certbot renew --webroot -w /var/www/certbot; sleep 12h; done"
    volumes:
      - certbot-webroot:/var/www/certbot
      - letsencrypt:/etc/letsencrypt
    networks: [webnet]

volumes:
  pgdata_staging:
  certbot-webroot:
  letsencrypt:

networks:
  webnet:
